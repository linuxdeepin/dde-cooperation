cmake_minimum_required(VERSION 3.13)

project(dde-cooperation VERSION 0.1 LANGUAGES CXX)

set(CMAKE_INCLUDE_CURRENT_DIR ON)

set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -Wall -fPIE")

if (NOT WIN32)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wl,--as-need")

    #安全加固
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror=return-type")
endif()

#安全加固
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fstack-protector-all")
if (${CMAKE_SYSTEM_PROCESSOR} MATCHES "mips")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -z noexecstack -z relro")
    add_definitions(-D ARCH_MIPSEL)
endif()

include(GNUInstallDirs)

if(NOT DEFINED LIB_INSTALL_DIR)
    set(LIB_INSTALL_DIR ${CMAKE_INSTALL_FULL_LIBDIR})
endif()

if (NOT DEFINED DDE_COOPERATION_PLUGIN_ROOT_DIR)
    set(DDE_COOPERATION_PLUGIN_ROOT_DIR ${LIB_INSTALL_DIR}/dde-cooperation/plugins)
endif()

if (NOT DEFINED DEEPIN_DATA_TRANS_PLUGIN_DIR)
    set(DEEPIN_DATA_TRANS_PLUGIN_DIR ${DDE_COOPERATION_PLUGIN_ROOT_DIR}/data-transfer)
endif()

if (NOT DEFINED DEEPIN_COOPERATION_PLUGIN_DIR)
    set(DEEPIN_COOPERATION_PLUGIN_DIR ${DDE_COOPERATION_PLUGIN_ROOT_DIR}/cooperation)
endif()

# build plugins dir
if(NOT DEFINED DDE_COOPERATION_PLUGIN_ROOT_DEBUG_DIR)
    set(DDE_COOPERATION_PLUGIN_ROOT_DEBUG_DIR ${CMAKE_CURRENT_BINARY_DIR}/src/plugins)
endif()

message("   >>> LIB_INSTALL_DIR  ${LIB_INSTALL_DIR}")
message("   >>> DDE_COOPERATION_PLUGIN_ROOT_DIR  ${DDE_COOPERATION_PLUGIN_ROOT_DIR}")
message("   >>> DEEPIN_DATA_TRANS_PLUGIN_DIR  ${DEEPIN_DATA_TRANS_PLUGIN_DIR}")
message("   >>> DEEPIN_CROSS_PLATFORM_COLLABORATION_PLUGIN_DIR  ${DEEPIN_CROSS_PLATFORM_COLLABORATION_PLUGIN_DIR}")
message("   >>> DDE_COOPERATION_PLUGIN_ROOT_DEBUG_DIR  ${DDE_COOPERATION_PLUGIN_ROOT_DEBUG_DIR}")

add_subdirectory(src)
