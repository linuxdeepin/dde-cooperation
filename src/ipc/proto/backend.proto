package ipc

service Backend {
    ping, // ping backend and check proto version
    getDiscovery, // get all discovery peers, return { PeerList }
    getPeerInfo, // get a remote information
    getPassword, // return { "password" : "xx"}
    setPassword, // { "password" : "xx"}
    tryConnect,
    tryTargetSpace, // { "dir" : "x/x"}
    tryApplist,
    miscMessage, // any message by json format
    tryTransFiles, // return a job id
    resumeTransJob,
    cancelTransJob,
    fsCreate, // create file or directory
    fsDelete, // delete files
    fsRename, // rename file or directory
    fsPull, // pull remote file or directory
}

// return {CallResult} msg is session id string
object PingBackParam {
    string who
    string version
    int32 cb_port  // the port listen on frontend side
}

object CallResult {
    bool result
    string msg
}

object ConnectParam {
    string session
    string host
    string password
}

object PeerParam {
    string session
    string host
}

object OnePeer {
    // peer info
    string uuid
    string ipv4
    string username
    string hostname
    int32 device_os
    string proto_version
    bool mode
}

object PeerList {
    // peer info list
    int32 code
    [OnePeer] peers
}

// send or receive files, return a job which have added
object TransFilesParam {
    string session
    int32 id
    [string] paths // arrary path of files will be transfer
    bool sub // whether include the all files in sub if it's dir
    string savedir // the file storage path, default config_save_dir
}

// resume or cancel a trans job
object TransJobParam {
    string session
    int32 job_id
    bool is_remote  // remote: write_jobs; local: read_jobs
}

object FsCreateParam {
    string session
    int32 id
    string path
    bool is_dir
}

object FsRenameParam {
    string session
    string from
    string to
}

object FsDeleteParam {
    string session
    int32 id
    [string] paths // arrary path of files
    bool recursive
    bool trash
}

object FsPullParam {
    string session
    int32 id
    string path
    bool include_hidden
    bool recursive
}
